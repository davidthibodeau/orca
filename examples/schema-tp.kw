spec tp where
| bool : tp
| arr : tp ->> tp ->> tp

spec tm : tp ->> * where
| app : (s : tp) ->> (t : tp) ->> tm (arr s t) ->> tm s ->> tm t
| lam : (s : tp) ->> (t : tp) ->> (tm s ->> tm t) ->> tm (arr s t)
| tt : tm bool
| ff : tm bool
| if : (t : tp) ->> tm bool ->> tm t ->> tm t ->> tm t

def copy : (g : ctx {s : tp} (tm s)) -> (t : |- tp) -> (g |- tm t) -> (g |- tm t)  = ?
(*) | x => ?
